name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_DB: MeCabal_test
          POSTGRES_USER: MeCabal_user
          POSTGRES_PASSWORD: MeCabal_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm run test:cov
      env:
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
        DATABASE_USERNAME: MeCabal_user
        DATABASE_PASSWORD: MeCabal_password
        DATABASE_NAME: MeCabal_test
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        JWT_SECRET: test-secret-key-for-ci
        JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build applications
      run: npm run build

    - name: Build Docker images
      run: |
        docker build -t MeCabal/auth-service -f apps/auth-service/Dockerfile .
        docker build -t MeCabal/user-service -f apps/user-service/Dockerfile .
        docker build -t MeCabal/social-service -f apps/social-service/Dockerfile .
        docker build -t MeCabal/messaging-service -f apps/messaging-service/Dockerfile .
        docker build -t MeCabal/marketplace-service -f apps/marketplace-service/Dockerfile .
        docker build -t MeCabal/events-service -f apps/events-service/Dockerfile .
        docker build -t MeCabal/notification-service -f apps/notification-service/Dockerfile .
        docker build -t MeCabal/api-gateway -f apps/api-gateway/Dockerfile .